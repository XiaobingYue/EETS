<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yxb.user.dao.UserDao">
    <resultMap id="userResultMap" type="permission">
        <id column="id" property="id"></id>
        <result column="parent_id" property="parentId"></result>
        <result column="name" property="name"></result>
        <result column="url" property="url"></result>
        <result column="note" property="note"></result>
        <result column="status" property="status"></result>
        <result column="icon" property="icon"></result>
    </resultMap>
    <resultMap id="userMap" type="user">
        <id column="id" property="id"></id>
        <result column="user_acct" property="userAcct"></result>
        <result column="name" property="name"></result>
        <result column="password" property="password"></result>
        <result column="email" property="email"></result>
        <result column="sex" property="sex"></result>
        <result column="phone" property="phone"></result>
        <result column="timestamp" property="timestamp"></result>
        <result column="sort" property="sort"></result>
        <result column="if_enable" property="ifEnable"></result>
    </resultMap>
	<select id="loginUser" resultMap="userMap">
		select *
			from t_user
			where USER_ACCT = #{userAcct} and PASSWORD = #{password}
	</select>

	<insert id="registerUser">
		insert into t_user (
			USER_ACCT , NAME , EMAIL , PASSWORD , SORT , SEX , TIMESTAMP , IF_ENABLE , PHONE
		) values (
			#{userAcct} , #{name} , #{email} , #{password} , #{sort} , #{sex} , #{timestamp} , #{ifEnable} , #{phone})
	</insert>
	
	<select id="getPermissionsByUserId" resultMap="userResultMap">
	 select
            *
        from t_permission
        where id in (
            select
                PERMISSION_ID
            from t_role_permission
            where ROLE_ID in (
                select 
                    ROLE_ID
                from t_user_role
                where USER_ID = #{id}
            )
        )
	</select>

    <select id="queryUserList" resultMap="userMap">
        select  *
          from  t_user
          <where>
              IF_ENABLE = #{ifEnable}
              <if test="queryText != null">
                    and USER_ACCT like concat('%', #{queryText}, '%')
                </if>
          </where>
           ORDER BY SORT limit #{start} , #{size}
    </select>

    <select id="queryPageSize" resultType="int">
        select   count(*)
        from t_user
        <where>
            IF_ENABLE = #{ifEnable}
            <if test="queryText != null">
                and USER_ACCT like concat('%', #{queryText}, '%')
            </if>
        </where>
    </select>

    <delete id="deleteRoleByUserId">
        DELETE FROM t_user_role
        WHERE USER_ID = #{id}
    </delete>

    <update id="deleteUser">
    	update t_user SET IF_ENABLE = #{ifEnable} , "TIMESTAMP" = #{timestamp}
    		where id = #{id}
    </update>

    <select id="queryById" resultMap="userMap">
        select *
            from t_user
            where id = #{id}
    </select>

    <update id="modifyUser">
        update t_user
        set USER_ACCT = #{userAcct} , NAME = #{name} , EMAIL = #{email} , SEX = #{sex} , PHONE = #{phone} , SORT = #{sort} , TIMESTAMP = #{timestamp}
        <where>
            id = #{id}
        </where>
    </update>

    <select id="findUserByUserAcct" resultMap="userMap">
    	select *
    		from t_user
    			where USER_ACCT = #{userAcct}
    </select>

    <select id="queryRoleIdByUserId" resultType="integer">
        select ROLE_ID
            from t_user_role
            where USER_ID = #{id}
    </select>

    <insert id="assign">
        insert into t_user_role
            (USER_ID,ROLE_ID)     values
            <foreach collection="roleIds"  item="roleId" separator=",">
                (#{userId}, #{roleId})
            </foreach>
    </insert>

    <delete id="unAssign">
        delete from t_user_role
            where
        <foreach collection="roleIds" item="roleId" separator=",">
            USER_ID = #{userId} and ROLE_ID = #{roleId}
        </foreach>
    </delete>
</mapper>